name: dockercompose15247028389550690154
services:
  booksservice:
    build:
      context: C:\Users\User\OneDrive\Desktop\Anuja\C#\MicroServiceArchitecture\docker\DockerCompose_SSMS_Gateway
      dockerfile: BooksService/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8000"
      ASPNETCORE_HTTPS_PORTS: "8001"
      DB_HOST: sqlserver
      DB_NAME: booksdb
      DB_ROOT_PASSWORD: Anutae08v
    image: booksservice
    networks:
      productnetwork: null
    ports:
    - mode: ingress
      target: 8000
      protocol: tcp
    - mode: ingress
      target: 8000
      published: "8000"
      protocol: tcp
    - mode: ingress
      target: 8001
      protocol: tcp
    - mode: ingress
      target: 8001
      published: "8001"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  gateway:
    build:
      context: C:\Users\User\OneDrive\Desktop\Anuja\C#\MicroServiceArchitecture\docker\DockerCompose_SSMS_Gateway
      dockerfile: Gateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "5000"
      ASPNETCORE_HTTPS_PORTS: "5001"
    image: gateway
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5000
      protocol: tcp
    - mode: ingress
      target: 5001
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  rentalsservice:
    build:
      context: C:\Users\User\OneDrive\Desktop\Anuja\C#\MicroServiceArchitecture\docker\DockerCompose_SSMS_Gateway
      dockerfile: RentalsService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "7000"
      ASPNETCORE_HTTPS_PORTS: "7001"
    image: rentalsservice
    networks:
      default: null
    ports:
    - mode: ingress
      target: 7000
      protocol: tcp
    - mode: ingress
      target: 7000
      published: "7000"
      protocol: tcp
    - mode: ingress
      target: 7001
      protocol: tcp
    - mode: ingress
      target: 7001
      published: "7001"
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\User\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\User\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Anutae08v
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      productnetwork: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: sqlserver_data
      target: /var/opt/mssql
      volume: {}
networks:
  default:
    name: dockercompose15247028389550690154_default
  productnetwork:
    name: dockercompose15247028389550690154_productnetwork
volumes:
  sqlserver_data:
    name: dockercompose15247028389550690154_sqlserver_data